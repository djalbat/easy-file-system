"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
var _customEventTypes = require("../customEventTypes");
function onCustomOpen(openCustomHandler, element) {
    var customEventType = _customEventTypes.OPEN_CUSTOM_EVENT_TYPE, customHandler = openCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomOpen(openCustomHandler, element) {
    var customEventType = _customEventTypes.OPEN_CUSTOM_EVENT_TYPE, customHandler = openCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
function onCustomMove(moveCustomHandler, element) {
    var customEventType = _customEventTypes.MOVE_CUSTOM_EVENT_TYPE, customHandler = moveCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomMove(moveCustomHandler, element) {
    var customEventType = _customEventTypes.MOVE_CUSTOM_EVENT_TYPE, customHandler = moveCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
function onCustomRemove(removeCustomHandler, element) {
    var customEventType = _customEventTypes.REMOVE_CUSTOM_EVENT_TYPE, customHandler = removeCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomRemove(removeCustomHandler, element) {
    var customEventType = _customEventTypes.REMOVE_CUSTOM_EVENT_TYPE, customHandler = removeCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
function onCustomRename(renameCustomHandler, element) {
    var customEventType = _customEventTypes.RENAME_CUSTOM_EVENT_TYPE, customHandler = renameCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomRename(renameCustomHandler, element) {
    var customEventType = _customEventTypes.RENAME_CUSTOM_EVENT_TYPE, customHandler = renameCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
function onCustomCreate(createCustomHandler, element) {
    var customEventType = _customEventTypes.CREATE_CUSTOM_EVENT_TYPE, customHandler = createCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomCreate(createCustomHandler, element) {
    var customEventType = _customEventTypes.CREATE_CUSTOM_EVENT_TYPE, customHandler = createCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
function onCustomSelect(selectCustomHandler, element) {
    var customEventType = _customEventTypes.SELECT_CUSTOM_EVENT_TYPE, customHandler = selectCustomHandler; ///
    this.onCustomEvent(customEventType, customHandler, element);
}
function offCustomSelect(selectCustomHandler, element) {
    var customEventType = _customEventTypes.SELECT_CUSTOM_EVENT_TYPE, customHandler = selectCustomHandler; ///
    this.offCustomEvent(customEventType, customHandler, element);
}
var explorerMixins = {
    onCustomOpen: onCustomOpen,
    offCustomOpen: offCustomOpen,
    onCustomMove: onCustomMove,
    offCustomMove: offCustomMove,
    onCustomRemove: onCustomRemove,
    offCustomRemove: offCustomRemove,
    onCustomRename: onCustomRename,
    offCustomRename: offCustomRename,
    onCustomCreate: onCustomCreate,
    offCustomCreate: offCustomCreate,
    onCustomSelect: onCustomSelect,
    offCustomSelect: offCustomSelect
};
var _default = explorerMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZXhwbG9yZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IE9QRU5fQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgICBNT1ZFX0NVU1RPTV9FVkVOVF9UWVBFLFxuICAgICAgICAgU0VMRUNUX0NVU1RPTV9FVkVOVF9UWVBFLFxuICAgICAgICAgUkVOQU1FX0NVU1RPTV9FVkVOVF9UWVBFLFxuICAgICAgICAgUkVNT1ZFX0NVU1RPTV9FVkVOVF9UWVBFLFxuICAgICAgICAgQ1JFQVRFX0NVU1RPTV9FVkVOVF9UWVBFIH0gZnJvbSBcIi4uL2N1c3RvbUV2ZW50VHlwZXNcIjtcblxuZnVuY3Rpb24gb25DdXN0b21PcGVuKG9wZW5DdXN0b21IYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGN1c3RvbUV2ZW50VHlwZSA9IE9QRU5fQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSBvcGVuQ3VzdG9tSGFuZGxlcjsgIC8vL1xuXG4gIHRoaXMub25DdXN0b21FdmVudChjdXN0b21FdmVudFR5cGUsIGN1c3RvbUhhbmRsZXIsIGVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiBvZmZDdXN0b21PcGVuKG9wZW5DdXN0b21IYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGN1c3RvbUV2ZW50VHlwZSA9IE9QRU5fQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSBvcGVuQ3VzdG9tSGFuZGxlcjsgIC8vL1xuXG4gIHRoaXMub2ZmQ3VzdG9tRXZlbnQoY3VzdG9tRXZlbnRUeXBlLCBjdXN0b21IYW5kbGVyLCBlbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gb25DdXN0b21Nb3ZlKG1vdmVDdXN0b21IYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGN1c3RvbUV2ZW50VHlwZSA9IE1PVkVfQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSBtb3ZlQ3VzdG9tSGFuZGxlcjsgIC8vL1xuXG4gIHRoaXMub25DdXN0b21FdmVudChjdXN0b21FdmVudFR5cGUsIGN1c3RvbUhhbmRsZXIsIGVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiBvZmZDdXN0b21Nb3ZlKG1vdmVDdXN0b21IYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGN1c3RvbUV2ZW50VHlwZSA9IE1PVkVfQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSBtb3ZlQ3VzdG9tSGFuZGxlcjsgIC8vL1xuXG4gIHRoaXMub2ZmQ3VzdG9tRXZlbnQoY3VzdG9tRXZlbnRUeXBlLCBjdXN0b21IYW5kbGVyLCBlbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gb25DdXN0b21SZW1vdmUocmVtb3ZlQ3VzdG9tSGFuZGxlciwgZWxlbWVudCkge1xuICBjb25zdCBjdXN0b21FdmVudFR5cGUgPSBSRU1PVkVfQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSByZW1vdmVDdXN0b21IYW5kbGVyOyAgLy8vXG5cbiAgdGhpcy5vbkN1c3RvbUV2ZW50KGN1c3RvbUV2ZW50VHlwZSwgY3VzdG9tSGFuZGxlciwgZWxlbWVudCk7XG59XG5cbmZ1bmN0aW9uIG9mZkN1c3RvbVJlbW92ZShyZW1vdmVDdXN0b21IYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGN1c3RvbUV2ZW50VHlwZSA9IFJFTU9WRV9DVVNUT01fRVZFTlRfVFlQRSxcbiAgICAgICAgY3VzdG9tSGFuZGxlciA9IHJlbW92ZUN1c3RvbUhhbmRsZXI7ICAvLy9cblxuICB0aGlzLm9mZkN1c3RvbUV2ZW50KGN1c3RvbUV2ZW50VHlwZSwgY3VzdG9tSGFuZGxlciwgZWxlbWVudCk7XG59XG5cbmZ1bmN0aW9uIG9uQ3VzdG9tUmVuYW1lKHJlbmFtZUN1c3RvbUhhbmRsZXIsIGVsZW1lbnQpIHtcbiAgY29uc3QgY3VzdG9tRXZlbnRUeXBlID0gUkVOQU1FX0NVU1RPTV9FVkVOVF9UWVBFLFxuICAgICAgICBjdXN0b21IYW5kbGVyID0gcmVuYW1lQ3VzdG9tSGFuZGxlcjsgIC8vL1xuXG4gIHRoaXMub25DdXN0b21FdmVudChjdXN0b21FdmVudFR5cGUsIGN1c3RvbUhhbmRsZXIsIGVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiBvZmZDdXN0b21SZW5hbWUocmVuYW1lQ3VzdG9tSGFuZGxlciwgZWxlbWVudCkge1xuICBjb25zdCBjdXN0b21FdmVudFR5cGUgPSBSRU5BTUVfQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSByZW5hbWVDdXN0b21IYW5kbGVyOyAgLy8vXG5cbiAgdGhpcy5vZmZDdXN0b21FdmVudChjdXN0b21FdmVudFR5cGUsIGN1c3RvbUhhbmRsZXIsIGVsZW1lbnQpO1xufVxuXG5mdW5jdGlvbiBvbkN1c3RvbUNyZWF0ZShjcmVhdGVDdXN0b21IYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGN1c3RvbUV2ZW50VHlwZSA9IENSRUFURV9DVVNUT01fRVZFTlRfVFlQRSxcbiAgICAgICAgY3VzdG9tSGFuZGxlciA9IGNyZWF0ZUN1c3RvbUhhbmRsZXI7ICAvLy9cblxuICB0aGlzLm9uQ3VzdG9tRXZlbnQoY3VzdG9tRXZlbnRUeXBlLCBjdXN0b21IYW5kbGVyLCBlbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gb2ZmQ3VzdG9tQ3JlYXRlKGNyZWF0ZUN1c3RvbUhhbmRsZXIsIGVsZW1lbnQpIHtcbiAgY29uc3QgY3VzdG9tRXZlbnRUeXBlID0gQ1JFQVRFX0NVU1RPTV9FVkVOVF9UWVBFLFxuICAgICAgICBjdXN0b21IYW5kbGVyID0gY3JlYXRlQ3VzdG9tSGFuZGxlcjsgIC8vL1xuXG4gIHRoaXMub2ZmQ3VzdG9tRXZlbnQoY3VzdG9tRXZlbnRUeXBlLCBjdXN0b21IYW5kbGVyLCBlbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gb25DdXN0b21TZWxlY3Qoc2VsZWN0Q3VzdG9tSGFuZGxlciwgZWxlbWVudCkge1xuICBjb25zdCBjdXN0b21FdmVudFR5cGUgPSBTRUxFQ1RfQ1VTVE9NX0VWRU5UX1RZUEUsXG4gICAgICAgIGN1c3RvbUhhbmRsZXIgPSBzZWxlY3RDdXN0b21IYW5kbGVyOyAgLy8vXG5cbiAgdGhpcy5vbkN1c3RvbUV2ZW50KGN1c3RvbUV2ZW50VHlwZSwgY3VzdG9tSGFuZGxlciwgZWxlbWVudCk7XG59XG5cbmZ1bmN0aW9uIG9mZkN1c3RvbVNlbGVjdChzZWxlY3RDdXN0b21IYW5kbGVyLCBlbGVtZW50KSB7XG4gIGNvbnN0IGN1c3RvbUV2ZW50VHlwZSA9IFNFTEVDVF9DVVNUT01fRVZFTlRfVFlQRSxcbiAgICAgICAgY3VzdG9tSGFuZGxlciA9IHNlbGVjdEN1c3RvbUhhbmRsZXI7ICAvLy9cblxuICB0aGlzLm9mZkN1c3RvbUV2ZW50KGN1c3RvbUV2ZW50VHlwZSwgY3VzdG9tSGFuZGxlciwgZWxlbWVudCk7XG59XG5cbmNvbnN0IGV4cGxvcmVyTWl4aW5zID0ge1xuICBvbkN1c3RvbU9wZW4sXG4gIG9mZkN1c3RvbU9wZW4sXG4gIG9uQ3VzdG9tTW92ZSxcbiAgb2ZmQ3VzdG9tTW92ZSxcbiAgb25DdXN0b21SZW1vdmUsXG4gIG9mZkN1c3RvbVJlbW92ZSxcbiAgb25DdXN0b21SZW5hbWUsXG4gIG9mZkN1c3RvbVJlbmFtZSxcbiAgb25DdXN0b21DcmVhdGUsXG4gIG9mZkN1c3RvbUNyZWF0ZSxcbiAgb25DdXN0b21TZWxlY3QsXG4gIG9mZkN1c3RvbVNlbGVjdFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZXhwbG9yZXJNaXhpbnM7XG4iXSwibmFtZXMiOlsib25DdXN0b21PcGVuIiwib3BlbkN1c3RvbUhhbmRsZXIiLCJlbGVtZW50IiwiY3VzdG9tRXZlbnRUeXBlIiwiT1BFTl9DVVNUT01fRVZFTlRfVFlQRSIsImN1c3RvbUhhbmRsZXIiLCJvbkN1c3RvbUV2ZW50Iiwib2ZmQ3VzdG9tT3BlbiIsIm9mZkN1c3RvbUV2ZW50Iiwib25DdXN0b21Nb3ZlIiwibW92ZUN1c3RvbUhhbmRsZXIiLCJNT1ZFX0NVU1RPTV9FVkVOVF9UWVBFIiwib2ZmQ3VzdG9tTW92ZSIsIm9uQ3VzdG9tUmVtb3ZlIiwicmVtb3ZlQ3VzdG9tSGFuZGxlciIsIlJFTU9WRV9DVVNUT01fRVZFTlRfVFlQRSIsIm9mZkN1c3RvbVJlbW92ZSIsIm9uQ3VzdG9tUmVuYW1lIiwicmVuYW1lQ3VzdG9tSGFuZGxlciIsIlJFTkFNRV9DVVNUT01fRVZFTlRfVFlQRSIsIm9mZkN1c3RvbVJlbmFtZSIsIm9uQ3VzdG9tQ3JlYXRlIiwiY3JlYXRlQ3VzdG9tSGFuZGxlciIsIkNSRUFURV9DVVNUT01fRVZFTlRfVFlQRSIsIm9mZkN1c3RvbUNyZWF0ZSIsIm9uQ3VzdG9tU2VsZWN0Iiwic2VsZWN0Q3VzdG9tSGFuZGxlciIsIlNFTEVDVF9DVVNUT01fRVZFTlRfVFlQRSIsIm9mZkN1c3RvbVNlbGVjdCIsImV4cGxvcmVyTWl4aW5zIl0sIm1hcHBpbmdzIjoiQUFBQTs7OzsrQkE0R0E7OztlQUFBOzs7Z0NBckd5QztBQUV6QyxTQUFTQSxhQUFhQyxpQkFBaUIsRUFBRUMsT0FBTztJQUM5QyxJQUFNQyxrQkFBa0JDLHdDQUFzQixFQUN4Q0MsZ0JBQWdCSixtQkFBb0IsR0FBRztJQUU3QyxJQUFJLENBQUNLLGFBQWEsQ0FBQ0gsaUJBQWlCRSxlQUFlSDtBQUNyRDtBQUVBLFNBQVNLLGNBQWNOLGlCQUFpQixFQUFFQyxPQUFPO0lBQy9DLElBQU1DLGtCQUFrQkMsd0NBQXNCLEVBQ3hDQyxnQkFBZ0JKLG1CQUFvQixHQUFHO0lBRTdDLElBQUksQ0FBQ08sY0FBYyxDQUFDTCxpQkFBaUJFLGVBQWVIO0FBQ3REO0FBRUEsU0FBU08sYUFBYUMsaUJBQWlCLEVBQUVSLE9BQU87SUFDOUMsSUFBTUMsa0JBQWtCUSx3Q0FBc0IsRUFDeENOLGdCQUFnQkssbUJBQW9CLEdBQUc7SUFFN0MsSUFBSSxDQUFDSixhQUFhLENBQUNILGlCQUFpQkUsZUFBZUg7QUFDckQ7QUFFQSxTQUFTVSxjQUFjRixpQkFBaUIsRUFBRVIsT0FBTztJQUMvQyxJQUFNQyxrQkFBa0JRLHdDQUFzQixFQUN4Q04sZ0JBQWdCSyxtQkFBb0IsR0FBRztJQUU3QyxJQUFJLENBQUNGLGNBQWMsQ0FBQ0wsaUJBQWlCRSxlQUFlSDtBQUN0RDtBQUVBLFNBQVNXLGVBQWVDLG1CQUFtQixFQUFFWixPQUFPO0lBQ2xELElBQU1DLGtCQUFrQlksMENBQXdCLEVBQzFDVixnQkFBZ0JTLHFCQUFzQixHQUFHO0lBRS9DLElBQUksQ0FBQ1IsYUFBYSxDQUFDSCxpQkFBaUJFLGVBQWVIO0FBQ3JEO0FBRUEsU0FBU2MsZ0JBQWdCRixtQkFBbUIsRUFBRVosT0FBTztJQUNuRCxJQUFNQyxrQkFBa0JZLDBDQUF3QixFQUMxQ1YsZ0JBQWdCUyxxQkFBc0IsR0FBRztJQUUvQyxJQUFJLENBQUNOLGNBQWMsQ0FBQ0wsaUJBQWlCRSxlQUFlSDtBQUN0RDtBQUVBLFNBQVNlLGVBQWVDLG1CQUFtQixFQUFFaEIsT0FBTztJQUNsRCxJQUFNQyxrQkFBa0JnQiwwQ0FBd0IsRUFDMUNkLGdCQUFnQmEscUJBQXNCLEdBQUc7SUFFL0MsSUFBSSxDQUFDWixhQUFhLENBQUNILGlCQUFpQkUsZUFBZUg7QUFDckQ7QUFFQSxTQUFTa0IsZ0JBQWdCRixtQkFBbUIsRUFBRWhCLE9BQU87SUFDbkQsSUFBTUMsa0JBQWtCZ0IsMENBQXdCLEVBQzFDZCxnQkFBZ0JhLHFCQUFzQixHQUFHO0lBRS9DLElBQUksQ0FBQ1YsY0FBYyxDQUFDTCxpQkFBaUJFLGVBQWVIO0FBQ3REO0FBRUEsU0FBU21CLGVBQWVDLG1CQUFtQixFQUFFcEIsT0FBTztJQUNsRCxJQUFNQyxrQkFBa0JvQiwwQ0FBd0IsRUFDMUNsQixnQkFBZ0JpQixxQkFBc0IsR0FBRztJQUUvQyxJQUFJLENBQUNoQixhQUFhLENBQUNILGlCQUFpQkUsZUFBZUg7QUFDckQ7QUFFQSxTQUFTc0IsZ0JBQWdCRixtQkFBbUIsRUFBRXBCLE9BQU87SUFDbkQsSUFBTUMsa0JBQWtCb0IsMENBQXdCLEVBQzFDbEIsZ0JBQWdCaUIscUJBQXNCLEdBQUc7SUFFL0MsSUFBSSxDQUFDZCxjQUFjLENBQUNMLGlCQUFpQkUsZUFBZUg7QUFDdEQ7QUFFQSxTQUFTdUIsZUFBZUMsbUJBQW1CLEVBQUV4QixPQUFPO0lBQ2xELElBQU1DLGtCQUFrQndCLDBDQUF3QixFQUMxQ3RCLGdCQUFnQnFCLHFCQUFzQixHQUFHO0lBRS9DLElBQUksQ0FBQ3BCLGFBQWEsQ0FBQ0gsaUJBQWlCRSxlQUFlSDtBQUNyRDtBQUVBLFNBQVMwQixnQkFBZ0JGLG1CQUFtQixFQUFFeEIsT0FBTztJQUNuRCxJQUFNQyxrQkFBa0J3QiwwQ0FBd0IsRUFDMUN0QixnQkFBZ0JxQixxQkFBc0IsR0FBRztJQUUvQyxJQUFJLENBQUNsQixjQUFjLENBQUNMLGlCQUFpQkUsZUFBZUg7QUFDdEQ7QUFFQSxJQUFNMkIsaUJBQWlCO0lBQ3JCN0IsY0FBQUE7SUFDQU8sZUFBQUE7SUFDQUUsY0FBQUE7SUFDQUcsZUFBQUE7SUFDQUMsZ0JBQUFBO0lBQ0FHLGlCQUFBQTtJQUNBQyxnQkFBQUE7SUFDQUcsaUJBQUFBO0lBQ0FDLGdCQUFBQTtJQUNBRyxpQkFBQUE7SUFDQUMsZ0JBQUFBO0lBQ0FHLGlCQUFBQTtBQUNGO0lBRUEsV0FBZUMifQ==