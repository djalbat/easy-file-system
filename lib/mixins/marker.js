"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = void 0;
var _path = require("../utilities/path");
var _options = require("../options");
function enableMarker() {
    this.onDragOver(dragOverHandler, this);
}
function disableMarker() {
    this.offDragOver(dragOverHandler, this);
}
function dragOverHandler(dragElement, element) {
    var collapsed = this.isCollapsed();
    if (collapsed) {
        return;
    }
    var path = this.getPath(), explorer = this.getExplorer(), dragEntryItem = dragElement, markerEntryItem = this.retrieveMarkerEntryItem(), dragEntryItemIgnored = dragEntryItem.isIgnored(explorer);
    if (dragEntryItemIgnored) {
        return;
    }
    var dragIntoTopmostDirectoriesOnlyOptionPresent = explorer.isOptionPresent(_options.DRAG_INTO_TOPMOST_DIRECTORIES_ONLY_OPTION);
    if (dragIntoTopmostDirectoriesOnlyOptionPresent) {
        var pathTopmostPath = (0, _path).isPathTopmostPath(path);
        if (!pathTopmostPath) {
            return;
        }
    }
    if (markerEntryItem === null) {
        debugger;
    }
    var dragEntryItemName = dragEntryItem.getName(), markerEntryItemPath = markerEntryItem.getPath(), oldMarkerEntryItemPath = markerEntryItemPath, newMarkerEntryItemPath = path === null ? dragEntryItemName : "".concat(path, "/").concat(dragEntryItemName), markerEntryItemExplorer = markerEntryItem.getExplorer(), oldMarkerEntryItemExplorer = markerEntryItemExplorer, newMarkerEntryItemExplorer = explorer; ///
    if (oldMarkerEntryItemExplorer !== newMarkerEntryItemExplorer || oldMarkerEntryItemPath !== newMarkerEntryItemPath) {
        var dragEntryItemType = dragEntryItem.getType(), markerEntryItemPath1 = newMarkerEntryItemPath; ///
        explorer.removeMarker();
        explorer.addMarker(markerEntryItemPath1, dragEntryItemType);
    }
}
var _default = {
    enableMarker: enableMarker,
    disableMarker: disableMarker
};
exports.default = _default;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvbWFya2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgeyBpc1BhdGhUb3Btb3N0UGF0aCB9IGZyb20gXCIuLi91dGlsaXRpZXMvcGF0aFwiO1xuaW1wb3J0IHsgRFJBR19JTlRPX1RPUE1PU1RfRElSRUNUT1JJRVNfT05MWV9PUFRJT04gfSBmcm9tIFwiLi4vb3B0aW9uc1wiO1xuXG5mdW5jdGlvbiBlbmFibGVNYXJrZXIoKSB7XG4gIHRoaXMub25EcmFnT3ZlcihkcmFnT3ZlckhhbmRsZXIsIHRoaXMpO1xufVxuXG5mdW5jdGlvbiBkaXNhYmxlTWFya2VyKCkge1xuICB0aGlzLm9mZkRyYWdPdmVyKGRyYWdPdmVySGFuZGxlciwgdGhpcyk7XG59XG5cbmZ1bmN0aW9uIGRyYWdPdmVySGFuZGxlcihkcmFnRWxlbWVudCwgZWxlbWVudCkge1xuICBjb25zdCBjb2xsYXBzZWQgPSB0aGlzLmlzQ29sbGFwc2VkKCk7XG5cbiAgaWYgKGNvbGxhcHNlZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHBhdGggPSB0aGlzLmdldFBhdGgoKSxcbiAgICAgICAgZXhwbG9yZXIgPSB0aGlzLmdldEV4cGxvcmVyKCksXG4gICAgICAgIGRyYWdFbnRyeUl0ZW0gPSBkcmFnRWxlbWVudCwgIC8vL1xuICAgICAgICBtYXJrZXJFbnRyeUl0ZW0gPSB0aGlzLnJldHJpZXZlTWFya2VyRW50cnlJdGVtKCksXG4gICAgICAgIGRyYWdFbnRyeUl0ZW1JZ25vcmVkID0gZHJhZ0VudHJ5SXRlbS5pc0lnbm9yZWQoZXhwbG9yZXIpO1xuXG4gIGlmIChkcmFnRW50cnlJdGVtSWdub3JlZCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGRyYWdJbnRvVG9wbW9zdERpcmVjdG9yaWVzT25seU9wdGlvblByZXNlbnQgPSBleHBsb3Jlci5pc09wdGlvblByZXNlbnQoRFJBR19JTlRPX1RPUE1PU1RfRElSRUNUT1JJRVNfT05MWV9PUFRJT04pO1xuXG4gIGlmIChkcmFnSW50b1RvcG1vc3REaXJlY3Rvcmllc09ubHlPcHRpb25QcmVzZW50KSB7XG4gICAgY29uc3QgcGF0aFRvcG1vc3RQYXRoID0gaXNQYXRoVG9wbW9zdFBhdGgocGF0aCk7XG5cbiAgICBpZiAoIXBhdGhUb3Btb3N0UGF0aCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIGlmIChtYXJrZXJFbnRyeUl0ZW0gPT09IG51bGwpIHtcbiAgICBkZWJ1Z2dlclxuICB9XG5cbiAgY29uc3QgZHJhZ0VudHJ5SXRlbU5hbWUgPSBkcmFnRW50cnlJdGVtLmdldE5hbWUoKSxcbiAgICAgICAgbWFya2VyRW50cnlJdGVtUGF0aCA9IG1hcmtlckVudHJ5SXRlbS5nZXRQYXRoKCksXG4gICAgICAgIG9sZE1hcmtlckVudHJ5SXRlbVBhdGggPSBtYXJrZXJFbnRyeUl0ZW1QYXRoLCAvLy9cbiAgICAgICAgbmV3TWFya2VyRW50cnlJdGVtUGF0aCA9IChwYXRoID09PSBudWxsKSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRyYWdFbnRyeUl0ZW1OYW1lIDogLy8vXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYCR7cGF0aH0vJHtkcmFnRW50cnlJdGVtTmFtZX1gLFxuICAgICAgICBtYXJrZXJFbnRyeUl0ZW1FeHBsb3JlciA9IG1hcmtlckVudHJ5SXRlbS5nZXRFeHBsb3JlcigpLFxuICAgICAgICBvbGRNYXJrZXJFbnRyeUl0ZW1FeHBsb3JlciA9IG1hcmtlckVudHJ5SXRlbUV4cGxvcmVyLCAvLy9cbiAgICAgICAgbmV3TWFya2VyRW50cnlJdGVtRXhwbG9yZXIgPSBleHBsb3JlcjsgIC8vL1xuXG4gIGlmICgob2xkTWFya2VyRW50cnlJdGVtRXhwbG9yZXIgIT09IG5ld01hcmtlckVudHJ5SXRlbUV4cGxvcmVyKSB8fCAob2xkTWFya2VyRW50cnlJdGVtUGF0aCAhPT0gbmV3TWFya2VyRW50cnlJdGVtUGF0aCkpIHtcbiAgICBjb25zdCBkcmFnRW50cnlJdGVtVHlwZSA9IGRyYWdFbnRyeUl0ZW0uZ2V0VHlwZSgpLFxuICAgICAgICAgIG1hcmtlckVudHJ5SXRlbVBhdGggPSBuZXdNYXJrZXJFbnRyeUl0ZW1QYXRoOyAvLy9cblxuICAgIGV4cGxvcmVyLnJlbW92ZU1hcmtlcigpO1xuXG4gICAgZXhwbG9yZXIuYWRkTWFya2VyKG1hcmtlckVudHJ5SXRlbVBhdGgsIGRyYWdFbnRyeUl0ZW1UeXBlKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGVuYWJsZU1hcmtlcixcbiAgZGlzYWJsZU1hcmtlclxufTtcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQ0FBQSxVQUFZOzs7OztJQUVzQixLQUFtQjtJQUNLLFFBQVk7U0FFN0QsWUFBWTtTQUNkLFVBQVUsQ0FBQyxlQUFlOztTQUd4QixhQUFhO1NBQ2YsV0FBVyxDQUFDLGVBQWU7O1NBR3pCLGVBQWUsQ0FBQyxXQUFXLEVBQUUsT0FBTztRQUNyQyxTQUFTLFFBQVEsV0FBVztRQUU5QixTQUFTOzs7UUFJUCxJQUFJLFFBQVEsT0FBTyxJQUNuQixRQUFRLFFBQVEsV0FBVyxJQUMzQixhQUFhLEdBQUcsV0FBVyxFQUMzQixlQUFlLFFBQVEsdUJBQXVCLElBQzlDLG9CQUFvQixHQUFHLGFBQWEsQ0FBQyxTQUFTLENBQUMsUUFBUTtRQUV6RCxvQkFBb0I7OztRQUlsQiwyQ0FBMkMsR0FBRyxRQUFRLENBQUMsZUFBZSxDQTNCcEIsUUFBWTtRQTZCaEUsMkNBQTJDO1lBQ3ZDLGVBQWUsT0EvQlMsS0FBbUIsb0JBK0JQLElBQUk7YUFFekMsZUFBZTs7OztRQUtsQixlQUFlLEtBQUssSUFBSTs7O1FBSXRCLGlCQUFpQixHQUFHLGFBQWEsQ0FBQyxPQUFPLElBQ3pDLG1CQUFtQixHQUFHLGVBQWUsQ0FBQyxPQUFPLElBQzdDLHNCQUFzQixHQUFHLG1CQUFtQixFQUM1QyxzQkFBc0IsR0FBSSxJQUFJLEtBQUssSUFBSSxHQUNaLGlCQUFpQixNQUNKLE1BQWlCLENBQXpCLElBQUksR0FBQyxDQUFDLEdBQW9CLE1BQUEsQ0FBbEIsaUJBQWlCLEdBQ3pELHVCQUF1QixHQUFHLGVBQWUsQ0FBQyxXQUFXLElBQ3JELDBCQUEwQixHQUFHLHVCQUF1QixFQUNwRCwwQkFBMEIsR0FBRyxRQUFRLENBQUcsQ0FBRyxBQUFILEVBQUcsQUFBSCxDQUFHO1FBRTVDLDBCQUEwQixLQUFLLDBCQUEwQixJQUFNLHNCQUFzQixLQUFLLHNCQUFzQjtZQUM3RyxpQkFBaUIsR0FBRyxhQUFhLENBQUMsT0FBTyxJQUN6QyxvQkFBbUIsR0FBRyxzQkFBc0IsQ0FBRSxDQUFHLEFBQUgsRUFBRyxBQUFILENBQUc7UUFFdkQsUUFBUSxDQUFDLFlBQVk7UUFFckIsUUFBUSxDQUFDLFNBQVMsQ0FBQyxvQkFBbUIsRUFBRSxpQkFBaUI7Ozs7SUFLM0QsWUFBWSxFQUFaLFlBQVk7SUFDWixhQUFhLEVBQWIsYUFBYSJ9