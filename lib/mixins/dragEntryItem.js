"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
function addDragEntryItem(pathMap, explorer) {
    var entryDirectory = pathMap.entryDirectory;
    entryDirectory ? this.addDirectoryNameDragEntryItem(pathMap, explorer) : this.addFileNameDragEntryItem(pathMap, explorer);
}
function removeDragEntryItem(pathMap, explorer) {
    var entryDirectory = pathMap.entryDirectory;
    entryDirectory ? this.removeDirectoryNameDragEntryItem(pathMap, explorer) : this.removeFileNameDragEntryItem(pathMap, explorer);
}
function addFileNameDragEntryItem(pathMap, explorer) {
    var targetEntryPath = pathMap.targetEntryPath;
    if (targetEntryPath === null) {
        return;
    }
    var filePath = targetEntryPath; ///
    this.addFilePath(filePath);
}
function removeFileNameDragEntryItem(pathMap, explorer) {
    var sourceEntryPath = pathMap.sourceEntryPath, filePath = sourceEntryPath; ///
    explorer.removeFilePath(filePath);
}
function addDirectoryNameDragEntryItem(pathMap, explorer) {
    var targetEntryPath = pathMap.targetEntryPath;
    if (targetEntryPath === null) {
        return;
    }
    var collapsed = pathMap.collapsed, directoryPath = targetEntryPath; ///
    this.addDirectoryPath(directoryPath, collapsed);
}
function removeDirectoryNameDragEntryItem(pathMap, explorer) {
    var sourceEntryPath = pathMap.sourceEntryPath, directoryPath = sourceEntryPath; ///
    explorer.removeDirectoryPath(directoryPath);
}
var dragEntryItemMixins = {
    addDragEntryItem: addDragEntryItem,
    removeDragEntryItem: removeDragEntryItem,
    addFileNameDragEntryItem: addFileNameDragEntryItem,
    removeFileNameDragEntryItem: removeFileNameDragEntryItem,
    addDirectoryNameDragEntryItem: addDirectoryNameDragEntryItem,
    removeDirectoryNameDragEntryItem: removeDirectoryNameDragEntryItem
};
var _default = dragEntryItemMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZHJhZ0VudHJ5SXRlbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gYWRkRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3Jlcikge1xuICBjb25zdCB7IGVudHJ5RGlyZWN0b3J5IH0gPSBwYXRoTWFwO1xuXG4gIGVudHJ5RGlyZWN0b3J5ID9cbiAgICB0aGlzLmFkZERpcmVjdG9yeU5hbWVEcmFnRW50cnlJdGVtKHBhdGhNYXAsIGV4cGxvcmVyKSA6XG4gICAgICB0aGlzLmFkZEZpbGVOYW1lRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3Jlcik7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZURyYWdFbnRyeUl0ZW0ocGF0aE1hcCwgZXhwbG9yZXIpIHtcbiAgY29uc3QgeyBlbnRyeURpcmVjdG9yeSB9ID0gcGF0aE1hcDtcblxuICBlbnRyeURpcmVjdG9yeSA/XG4gICAgdGhpcy5yZW1vdmVEaXJlY3RvcnlOYW1lRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3JlcikgOlxuICAgICAgdGhpcy5yZW1vdmVGaWxlTmFtZURyYWdFbnRyeUl0ZW0ocGF0aE1hcCwgZXhwbG9yZXIpO1xufVxuXG5mdW5jdGlvbiBhZGRGaWxlTmFtZURyYWdFbnRyeUl0ZW0ocGF0aE1hcCwgZXhwbG9yZXIpIHtcbiAgY29uc3QgeyB0YXJnZXRFbnRyeVBhdGggfSA9IHBhdGhNYXA7XG5cbiAgaWYgKHRhcmdldEVudHJ5UGF0aCA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGZpbGVQYXRoID0gdGFyZ2V0RW50cnlQYXRoOyAvLy9cblxuICB0aGlzLmFkZEZpbGVQYXRoKGZpbGVQYXRoKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlRmlsZU5hbWVEcmFnRW50cnlJdGVtKHBhdGhNYXAsIGV4cGxvcmVyKSB7XG4gIGNvbnN0IHsgc291cmNlRW50cnlQYXRoIH0gPSBwYXRoTWFwLFxuICAgICAgICBmaWxlUGF0aCA9IHNvdXJjZUVudHJ5UGF0aDsgLy8vXG5cbiAgZXhwbG9yZXIucmVtb3ZlRmlsZVBhdGgoZmlsZVBhdGgpO1xufVxuXG5mdW5jdGlvbiBhZGREaXJlY3RvcnlOYW1lRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3Jlcikge1xuICBjb25zdCB7IHRhcmdldEVudHJ5UGF0aCB9ID0gcGF0aE1hcDtcblxuICBpZiAodGFyZ2V0RW50cnlQYXRoID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgeyBjb2xsYXBzZWQgfSA9IHBhdGhNYXAsXG4gICAgICAgIGRpcmVjdG9yeVBhdGggPSB0YXJnZXRFbnRyeVBhdGg7ICAvLy9cblxuICB0aGlzLmFkZERpcmVjdG9yeVBhdGgoZGlyZWN0b3J5UGF0aCwgY29sbGFwc2VkKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlRGlyZWN0b3J5TmFtZURyYWdFbnRyeUl0ZW0ocGF0aE1hcCwgZXhwbG9yZXIpIHtcbiAgY29uc3QgeyBzb3VyY2VFbnRyeVBhdGggfSA9IHBhdGhNYXAsXG4gICAgICAgIGRpcmVjdG9yeVBhdGggPSBzb3VyY2VFbnRyeVBhdGg7ICAvLy9cblxuICBleHBsb3Jlci5yZW1vdmVEaXJlY3RvcnlQYXRoKGRpcmVjdG9yeVBhdGgpO1xufVxuXG5jb25zdCBkcmFnRW50cnlJdGVtTWl4aW5zID0ge1xuICBhZGREcmFnRW50cnlJdGVtLFxuICByZW1vdmVEcmFnRW50cnlJdGVtLFxuICBhZGRGaWxlTmFtZURyYWdFbnRyeUl0ZW0sXG4gIHJlbW92ZUZpbGVOYW1lRHJhZ0VudHJ5SXRlbSxcbiAgYWRkRGlyZWN0b3J5TmFtZURyYWdFbnRyeUl0ZW0sXG4gIHJlbW92ZURpcmVjdG9yeU5hbWVEcmFnRW50cnlJdGVtXG59O1xuXG5leHBvcnQgZGVmYXVsdCBkcmFnRW50cnlJdGVtTWl4aW5zO1xuIl0sIm5hbWVzIjpbImFkZERyYWdFbnRyeUl0ZW0iLCJwYXRoTWFwIiwiZXhwbG9yZXIiLCJlbnRyeURpcmVjdG9yeSIsImFkZERpcmVjdG9yeU5hbWVEcmFnRW50cnlJdGVtIiwiYWRkRmlsZU5hbWVEcmFnRW50cnlJdGVtIiwicmVtb3ZlRHJhZ0VudHJ5SXRlbSIsInJlbW92ZURpcmVjdG9yeU5hbWVEcmFnRW50cnlJdGVtIiwicmVtb3ZlRmlsZU5hbWVEcmFnRW50cnlJdGVtIiwidGFyZ2V0RW50cnlQYXRoIiwiZmlsZVBhdGgiLCJhZGRGaWxlUGF0aCIsInNvdXJjZUVudHJ5UGF0aCIsInJlbW92ZUZpbGVQYXRoIiwiY29sbGFwc2VkIiwiZGlyZWN0b3J5UGF0aCIsImFkZERpcmVjdG9yeVBhdGgiLCJyZW1vdmVEaXJlY3RvcnlQYXRoIiwiZHJhZ0VudHJ5SXRlbU1peGlucyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7K0JBa0VBOzs7ZUFBQTs7O0FBaEVBLFNBQVNBLGlCQUFpQkMsT0FBTyxFQUFFQyxRQUFRLEVBQUU7SUFDM0MsSUFBTSxBQUFFQyxpQkFBbUJGLFFBQW5CRTtJQUVSQSxpQkFDRSxJQUFJLENBQUNDLDZCQUE2QixDQUFDSCxTQUFTQyxZQUMxQyxJQUFJLENBQUNHLHdCQUF3QixDQUFDSixTQUFTQyxTQUFTO0FBQ3REO0FBRUEsU0FBU0ksb0JBQW9CTCxPQUFPLEVBQUVDLFFBQVEsRUFBRTtJQUM5QyxJQUFNLEFBQUVDLGlCQUFtQkYsUUFBbkJFO0lBRVJBLGlCQUNFLElBQUksQ0FBQ0ksZ0NBQWdDLENBQUNOLFNBQVNDLFlBQzdDLElBQUksQ0FBQ00sMkJBQTJCLENBQUNQLFNBQVNDLFNBQVM7QUFDekQ7QUFFQSxTQUFTRyx5QkFBeUJKLE9BQU8sRUFBRUMsUUFBUSxFQUFFO0lBQ25ELElBQU0sQUFBRU8sa0JBQW9CUixRQUFwQlE7SUFFUixJQUFJQSxvQkFBb0IsSUFBSSxFQUFFO1FBQzVCO0lBQ0YsQ0FBQztJQUVELElBQU1DLFdBQVdELGlCQUFpQixHQUFHO0lBRXJDLElBQUksQ0FBQ0UsV0FBVyxDQUFDRDtBQUNuQjtBQUVBLFNBQVNGLDRCQUE0QlAsT0FBTyxFQUFFQyxRQUFRLEVBQUU7SUFDdEQsSUFBTSxBQUFFVSxrQkFBb0JYLFFBQXBCVyxpQkFDRkYsV0FBV0UsaUJBQWlCLEdBQUc7SUFFckNWLFNBQVNXLGNBQWMsQ0FBQ0g7QUFDMUI7QUFFQSxTQUFTTiw4QkFBOEJILE9BQU8sRUFBRUMsUUFBUSxFQUFFO0lBQ3hELElBQU0sQUFBRU8sa0JBQW9CUixRQUFwQlE7SUFFUixJQUFJQSxvQkFBb0IsSUFBSSxFQUFFO1FBQzVCO0lBQ0YsQ0FBQztJQUVELElBQU0sQUFBRUssWUFBY2IsUUFBZGEsV0FDRkMsZ0JBQWdCTixpQkFBa0IsR0FBRztJQUUzQyxJQUFJLENBQUNPLGdCQUFnQixDQUFDRCxlQUFlRDtBQUN2QztBQUVBLFNBQVNQLGlDQUFpQ04sT0FBTyxFQUFFQyxRQUFRLEVBQUU7SUFDM0QsSUFBTSxBQUFFVSxrQkFBb0JYLFFBQXBCVyxpQkFDRkcsZ0JBQWdCSCxpQkFBa0IsR0FBRztJQUUzQ1YsU0FBU2UsbUJBQW1CLENBQUNGO0FBQy9CO0FBRUEsSUFBTUcsc0JBQXNCO0lBQzFCbEIsa0JBQUFBO0lBQ0FNLHFCQUFBQTtJQUNBRCwwQkFBQUE7SUFDQUcsNkJBQUFBO0lBQ0FKLCtCQUFBQTtJQUNBRyxrQ0FBQUE7QUFDRjtJQUVBLFdBQWVXIn0=