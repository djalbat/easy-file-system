"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
function addDragEntryItem(pathMap, explorer) {
    var entryDirectory = pathMap.entryDirectory;
    entryDirectory ? this.addDirectoryNameDragEntryItem(pathMap, explorer) : this.addFileNameDragEntryItem(pathMap, explorer);
}
function removeDragEntryItem(pathMap, explorer) {
    var entryDirectory = pathMap.entryDirectory;
    entryDirectory ? this.removeDirectoryNameDragEntryItem(pathMap, explorer) : this.removeFileNameDragEntryItem(pathMap, explorer);
}
function addFileNameDragEntryItem(pathMap, explorer) {
    explorer = this; ///
    var targetEntryPath = pathMap.targetEntryPath;
    if (targetEntryPath === null) {
        return;
    }
    var filePath = targetEntryPath; ///
    explorer.addFilePath(filePath);
}
function removeFileNameDragEntryItem(pathMap, explorer) {
    var sourceEntryPath = pathMap.sourceEntryPath;
    if (sourceEntryPath === null) {
        return;
    }
    var filePath = sourceEntryPath; ///
    explorer.removeFilePath(filePath);
}
function addDirectoryNameDragEntryItem(pathMap, explorer) {
    explorer = this; ///
    var targetEntryPath = pathMap.targetEntryPath;
    if (targetEntryPath === null) {
        return;
    }
    var collapsed = pathMap.collapsed, directoryPath = targetEntryPath; ///
    explorer.addDirectoryPath(directoryPath, collapsed);
}
function removeDirectoryNameDragEntryItem(pathMap, explorer) {
    var sourceEntryPath = pathMap.sourceEntryPath;
    if (sourceEntryPath === null) {
        return;
    }
    var directoryPath = sourceEntryPath; ///
    explorer.removeDirectoryPath(directoryPath);
}
var dragEntryItemMixins = {
    addDragEntryItem: addDragEntryItem,
    removeDragEntryItem: removeDragEntryItem,
    addFileNameDragEntryItem: addFileNameDragEntryItem,
    removeFileNameDragEntryItem: removeFileNameDragEntryItem,
    addDirectoryNameDragEntryItem: addDirectoryNameDragEntryItem,
    removeDirectoryNameDragEntryItem: removeDirectoryNameDragEntryItem
};
var _default = dragEntryItemMixins;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taXhpbnMvZHJhZ0VudHJ5SXRlbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gYWRkRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3Jlcikge1xuICBjb25zdCB7IGVudHJ5RGlyZWN0b3J5IH0gPSBwYXRoTWFwO1xuXG4gIGVudHJ5RGlyZWN0b3J5ID9cbiAgICB0aGlzLmFkZERpcmVjdG9yeU5hbWVEcmFnRW50cnlJdGVtKHBhdGhNYXAsIGV4cGxvcmVyKSA6XG4gICAgICB0aGlzLmFkZEZpbGVOYW1lRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3Jlcik7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZURyYWdFbnRyeUl0ZW0ocGF0aE1hcCwgZXhwbG9yZXIpIHtcbiAgY29uc3QgeyBlbnRyeURpcmVjdG9yeSB9ID0gcGF0aE1hcDtcblxuICBlbnRyeURpcmVjdG9yeSA/XG4gICAgdGhpcy5yZW1vdmVEaXJlY3RvcnlOYW1lRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3JlcikgOlxuICAgICAgdGhpcy5yZW1vdmVGaWxlTmFtZURyYWdFbnRyeUl0ZW0ocGF0aE1hcCwgZXhwbG9yZXIpO1xufVxuXG5mdW5jdGlvbiBhZGRGaWxlTmFtZURyYWdFbnRyeUl0ZW0ocGF0aE1hcCwgZXhwbG9yZXIpIHtcbiAgZXhwbG9yZXIgPSB0aGlzOyAgLy8vXG5cbiAgY29uc3QgeyB0YXJnZXRFbnRyeVBhdGggfSA9IHBhdGhNYXA7XG5cbiAgaWYgKHRhcmdldEVudHJ5UGF0aCA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IGZpbGVQYXRoID0gdGFyZ2V0RW50cnlQYXRoOyAvLy9cblxuICBleHBsb3Jlci5hZGRGaWxlUGF0aChmaWxlUGF0aCk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZUZpbGVOYW1lRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3Jlcikge1xuICBjb25zdCB7IHNvdXJjZUVudHJ5UGF0aCB9ID0gcGF0aE1hcDtcblxuICBpZiAoc291cmNlRW50cnlQYXRoID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgZmlsZVBhdGggPSBzb3VyY2VFbnRyeVBhdGg7IC8vL1xuXG4gIGV4cGxvcmVyLnJlbW92ZUZpbGVQYXRoKGZpbGVQYXRoKTtcbn1cblxuZnVuY3Rpb24gYWRkRGlyZWN0b3J5TmFtZURyYWdFbnRyeUl0ZW0ocGF0aE1hcCwgZXhwbG9yZXIpIHtcbiAgZXhwbG9yZXIgPSB0aGlzOyAgLy8vXG5cbiAgY29uc3QgeyB0YXJnZXRFbnRyeVBhdGggfSA9IHBhdGhNYXA7XG5cbiAgaWYgKHRhcmdldEVudHJ5UGF0aCA9PT0gbnVsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHsgY29sbGFwc2VkIH0gPSBwYXRoTWFwLFxuICAgICAgICBkaXJlY3RvcnlQYXRoID0gdGFyZ2V0RW50cnlQYXRoOyAgLy8vXG5cbiAgZXhwbG9yZXIuYWRkRGlyZWN0b3J5UGF0aChkaXJlY3RvcnlQYXRoLCBjb2xsYXBzZWQpO1xufVxuXG5mdW5jdGlvbiByZW1vdmVEaXJlY3RvcnlOYW1lRHJhZ0VudHJ5SXRlbShwYXRoTWFwLCBleHBsb3Jlcikge1xuICBjb25zdCB7IHNvdXJjZUVudHJ5UGF0aCB9ID0gcGF0aE1hcDtcblxuICBpZiAoc291cmNlRW50cnlQYXRoID09PSBudWxsKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgZGlyZWN0b3J5UGF0aCA9IHNvdXJjZUVudHJ5UGF0aDsgIC8vL1xuXG4gIGV4cGxvcmVyLnJlbW92ZURpcmVjdG9yeVBhdGgoZGlyZWN0b3J5UGF0aCk7XG59XG5cbmNvbnN0IGRyYWdFbnRyeUl0ZW1NaXhpbnMgPSB7XG4gIGFkZERyYWdFbnRyeUl0ZW0sXG4gIHJlbW92ZURyYWdFbnRyeUl0ZW0sXG4gIGFkZEZpbGVOYW1lRHJhZ0VudHJ5SXRlbSxcbiAgcmVtb3ZlRmlsZU5hbWVEcmFnRW50cnlJdGVtLFxuICBhZGREaXJlY3RvcnlOYW1lRHJhZ0VudHJ5SXRlbSxcbiAgcmVtb3ZlRGlyZWN0b3J5TmFtZURyYWdFbnRyeUl0ZW1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGRyYWdFbnRyeUl0ZW1NaXhpbnM7XG4iXSwibmFtZXMiOlsiYWRkRHJhZ0VudHJ5SXRlbSIsInBhdGhNYXAiLCJleHBsb3JlciIsImVudHJ5RGlyZWN0b3J5IiwiYWRkRGlyZWN0b3J5TmFtZURyYWdFbnRyeUl0ZW0iLCJhZGRGaWxlTmFtZURyYWdFbnRyeUl0ZW0iLCJyZW1vdmVEcmFnRW50cnlJdGVtIiwicmVtb3ZlRGlyZWN0b3J5TmFtZURyYWdFbnRyeUl0ZW0iLCJyZW1vdmVGaWxlTmFtZURyYWdFbnRyeUl0ZW0iLCJ0YXJnZXRFbnRyeVBhdGgiLCJmaWxlUGF0aCIsImFkZEZpbGVQYXRoIiwic291cmNlRW50cnlQYXRoIiwicmVtb3ZlRmlsZVBhdGgiLCJjb2xsYXBzZWQiLCJkaXJlY3RvcnlQYXRoIiwiYWRkRGlyZWN0b3J5UGF0aCIsInJlbW92ZURpcmVjdG9yeVBhdGgiLCJkcmFnRW50cnlJdGVtTWl4aW5zIl0sIm1hcHBpbmdzIjoiQUFBQTs7OzsrQkFnRkE7OztlQUFBOzs7QUE5RUEsU0FBU0EsaUJBQWlCQyxPQUFPLEVBQUVDLFFBQVEsRUFBRTtJQUMzQyxJQUFNLEFBQUVDLGlCQUFtQkYsUUFBbkJFO0lBRVJBLGlCQUNFLElBQUksQ0FBQ0MsNkJBQTZCLENBQUNILFNBQVNDLFlBQzFDLElBQUksQ0FBQ0csd0JBQXdCLENBQUNKLFNBQVNDLFNBQVM7QUFDdEQ7QUFFQSxTQUFTSSxvQkFBb0JMLE9BQU8sRUFBRUMsUUFBUSxFQUFFO0lBQzlDLElBQU0sQUFBRUMsaUJBQW1CRixRQUFuQkU7SUFFUkEsaUJBQ0UsSUFBSSxDQUFDSSxnQ0FBZ0MsQ0FBQ04sU0FBU0MsWUFDN0MsSUFBSSxDQUFDTSwyQkFBMkIsQ0FBQ1AsU0FBU0MsU0FBUztBQUN6RDtBQUVBLFNBQVNHLHlCQUF5QkosT0FBTyxFQUFFQyxRQUFRLEVBQUU7SUFDbkRBLFdBQVcsSUFBSSxFQUFHLEdBQUc7SUFFckIsSUFBTSxBQUFFTyxrQkFBb0JSLFFBQXBCUTtJQUVSLElBQUlBLG9CQUFvQixJQUFJLEVBQUU7UUFDNUI7SUFDRixDQUFDO0lBRUQsSUFBTUMsV0FBV0QsaUJBQWlCLEdBQUc7SUFFckNQLFNBQVNTLFdBQVcsQ0FBQ0Q7QUFDdkI7QUFFQSxTQUFTRiw0QkFBNEJQLE9BQU8sRUFBRUMsUUFBUSxFQUFFO0lBQ3RELElBQU0sQUFBRVUsa0JBQW9CWCxRQUFwQlc7SUFFUixJQUFJQSxvQkFBb0IsSUFBSSxFQUFFO1FBQzVCO0lBQ0YsQ0FBQztJQUVELElBQU1GLFdBQVdFLGlCQUFpQixHQUFHO0lBRXJDVixTQUFTVyxjQUFjLENBQUNIO0FBQzFCO0FBRUEsU0FBU04sOEJBQThCSCxPQUFPLEVBQUVDLFFBQVEsRUFBRTtJQUN4REEsV0FBVyxJQUFJLEVBQUcsR0FBRztJQUVyQixJQUFNLEFBQUVPLGtCQUFvQlIsUUFBcEJRO0lBRVIsSUFBSUEsb0JBQW9CLElBQUksRUFBRTtRQUM1QjtJQUNGLENBQUM7SUFFRCxJQUFNLEFBQUVLLFlBQWNiLFFBQWRhLFdBQ0ZDLGdCQUFnQk4saUJBQWtCLEdBQUc7SUFFM0NQLFNBQVNjLGdCQUFnQixDQUFDRCxlQUFlRDtBQUMzQztBQUVBLFNBQVNQLGlDQUFpQ04sT0FBTyxFQUFFQyxRQUFRLEVBQUU7SUFDM0QsSUFBTSxBQUFFVSxrQkFBb0JYLFFBQXBCVztJQUVSLElBQUlBLG9CQUFvQixJQUFJLEVBQUU7UUFDNUI7SUFDRixDQUFDO0lBRUQsSUFBTUcsZ0JBQWdCSCxpQkFBa0IsR0FBRztJQUUzQ1YsU0FBU2UsbUJBQW1CLENBQUNGO0FBQy9CO0FBRUEsSUFBTUcsc0JBQXNCO0lBQzFCbEIsa0JBQUFBO0lBQ0FNLHFCQUFBQTtJQUNBRCwwQkFBQUE7SUFDQUcsNkJBQUFBO0lBQ0FKLCtCQUFBQTtJQUNBRyxrQ0FBQUE7QUFDRjtJQUVBLFdBQWVXIn0=