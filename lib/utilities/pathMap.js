"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.sourceEntryPathFromDragEntryItemPath = sourceEntryPathFromDragEntryItemPath;
exports.targetEntryPathFromMarkerEntryItemPath = targetEntryPathFromMarkerEntryItemPath;
exports.adjustSourceEntryPath = adjustSourceEntryPath;
exports.adjustTargetEntryPath = adjustTargetEntryPath;
var _necessary = require("necessary");
var _constants = require("../constants");
var pathWithoutBottommostNameFromPath = _necessary.pathUtilities.pathWithoutBottommostNameFromPath;
function sourceEntryPathFromDragEntryItemPath(dragEntryItemPath) {
    var dragEntryItemPathWithoutBottommostName = pathWithoutBottommostNameFromPath(dragEntryItemPath), sourceEntryPath = nonNullPathFromName(dragEntryItemPathWithoutBottommostName); ///
    return sourceEntryPath;
}
function targetEntryPathFromMarkerEntryItemPath(markerEntryItemPath) {
    var markerEntryItemPathWithoutBottommostName = pathWithoutBottommostNameFromPath(markerEntryItemPath), targetEntryPath = nonNullPathFromName(markerEntryItemPathWithoutBottommostName); ///
    return targetEntryPath;
}
function adjustSourceEntryPath(sourceEntryPath, name) {
    if (false) {
    ///
    } else if (sourceEntryPath === _constants.EMPTY_STRING) {
        sourceEntryPath = name; ///
    } else {
        sourceEntryPath = "".concat(sourceEntryPath, "/").concat(name);
    }
    return sourceEntryPath;
}
function adjustTargetEntryPath(targetEntryPath, name) {
    if (false) {
    ///
    } else if (targetEntryPath === null) {
        targetEntryPath = null;
    } else if (targetEntryPath === _constants.EMPTY_STRING) {
        targetEntryPath = name; ///
    } else {
        targetEntryPath = "".concat(targetEntryPath, "/").concat(name);
    }
    return targetEntryPath;
}
function nonNullPathFromName(name) {
    var path = name !== null ? name : _constants.EMPTY_STRING;
    return path;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcGF0aE1hcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcGF0aFV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5jb25zdCB7IHBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWVGcm9tUGF0aCB9ID0gcGF0aFV0aWxpdGllcztcblxuZXhwb3J0IGZ1bmN0aW9uIHNvdXJjZUVudHJ5UGF0aEZyb21EcmFnRW50cnlJdGVtUGF0aChkcmFnRW50cnlJdGVtUGF0aCkge1xuICBjb25zdCBkcmFnRW50cnlJdGVtUGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZSA9IHBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWVGcm9tUGF0aChkcmFnRW50cnlJdGVtUGF0aCksXG4gICAgICAgIHNvdXJjZUVudHJ5UGF0aCA9IG5vbk51bGxQYXRoRnJvbU5hbWUoZHJhZ0VudHJ5SXRlbVBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWUpOyAvLy9cblxuICByZXR1cm4gc291cmNlRW50cnlQYXRoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGFyZ2V0RW50cnlQYXRoRnJvbU1hcmtlckVudHJ5SXRlbVBhdGgobWFya2VyRW50cnlJdGVtUGF0aCkge1xuICBjb25zdCBtYXJrZXJFbnRyeUl0ZW1QYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lID0gcGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZUZyb21QYXRoKG1hcmtlckVudHJ5SXRlbVBhdGgpLFxuICAgICAgICB0YXJnZXRFbnRyeVBhdGggPSBub25OdWxsUGF0aEZyb21OYW1lKG1hcmtlckVudHJ5SXRlbVBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWUpOyAvLy9cblxuICByZXR1cm4gdGFyZ2V0RW50cnlQYXRoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRqdXN0U291cmNlRW50cnlQYXRoKHNvdXJjZUVudHJ5UGF0aCwgbmFtZSkge1xuICBpZiAoZmFsc2UpIHtcbiAgICAvLy9cbiAgfSBlbHNlIGlmIChzb3VyY2VFbnRyeVBhdGggPT09IEVNUFRZX1NUUklORykge1xuICAgIHNvdXJjZUVudHJ5UGF0aCA9IG5hbWU7ICAvLy9cbiAgfSBlbHNlIHtcbiAgICBzb3VyY2VFbnRyeVBhdGggPSBgJHtzb3VyY2VFbnRyeVBhdGh9LyR7bmFtZX1gO1xuICB9XG5cbiAgcmV0dXJuIHNvdXJjZUVudHJ5UGF0aDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkanVzdFRhcmdldEVudHJ5UGF0aCh0YXJnZXRFbnRyeVBhdGgsIG5hbWUpIHtcbiAgaWYgKGZhbHNlKSB7XG4gICAgLy8vXG4gIH0gZWxzZSBpZiAodGFyZ2V0RW50cnlQYXRoID09PSBudWxsKSB7XG4gICAgdGFyZ2V0RW50cnlQYXRoID0gbnVsbDtcbiAgfSBlbHNlIGlmICh0YXJnZXRFbnRyeVBhdGggPT09IEVNUFRZX1NUUklORykge1xuICAgIHRhcmdldEVudHJ5UGF0aCA9IG5hbWU7ICAvLy9cbiAgfSBlbHNlIHtcbiAgICB0YXJnZXRFbnRyeVBhdGggPSBgJHt0YXJnZXRFbnRyeVBhdGh9LyR7bmFtZX1gO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldEVudHJ5UGF0aDtcbn1cblxuZnVuY3Rpb24gbm9uTnVsbFBhdGhGcm9tTmFtZShuYW1lKSB7XG4gIGNvbnN0IHBhdGggPSAobmFtZSAhPT0gbnVsbCkgP1xuICAgICAgICAgICAgICAgICAgbmFtZSA6ICAvLy9cbiAgICAgICAgICAgICAgICAgICAgRU1QVFlfU1RSSU5HO1xuXG4gIHJldHVybiBwYXRoO1xufVxuIl0sIm5hbWVzIjpbInNvdXJjZUVudHJ5UGF0aEZyb21EcmFnRW50cnlJdGVtUGF0aCIsInRhcmdldEVudHJ5UGF0aEZyb21NYXJrZXJFbnRyeUl0ZW1QYXRoIiwiYWRqdXN0U291cmNlRW50cnlQYXRoIiwiYWRqdXN0VGFyZ2V0RW50cnlQYXRoIiwicGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZUZyb21QYXRoIiwicGF0aFV0aWxpdGllcyIsImRyYWdFbnRyeUl0ZW1QYXRoIiwiZHJhZ0VudHJ5SXRlbVBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWUiLCJzb3VyY2VFbnRyeVBhdGgiLCJub25OdWxsUGF0aEZyb21OYW1lIiwibWFya2VyRW50cnlJdGVtUGF0aCIsIm1hcmtlckVudHJ5SXRlbVBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWUiLCJ0YXJnZXRFbnRyeVBhdGgiLCJuYW1lIiwiRU1QVFlfU1RSSU5HIiwicGF0aCJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDOzs7O1FBUUdBLG9DQUFvQyxHQUFwQ0Esb0NBQW9DO1FBT3BDQyxzQ0FBc0MsR0FBdENBLHNDQUFzQztRQU90Q0MscUJBQXFCLEdBQXJCQSxxQkFBcUI7UUFZckJDLHFCQUFxQixHQUFyQkEscUJBQXFCO0FBaENQLElBQUEsVUFBVyxXQUFYLFdBQVcsQ0FBQTtBQUVaLElBQUEsVUFBYyxXQUFkLGNBQWMsQ0FBQTtBQUUzQyxJQUFNLEFBQUVDLGlDQUFpQyxHQUFLQyxVQUFhLGNBQUEsQ0FBbkRELGlDQUFpQyxBQUFrQixBQUFDO0FBRXJELFNBQVNKLG9DQUFvQyxDQUFDTSxpQkFBaUIsRUFBRTtJQUN0RSxJQUFNQyxzQ0FBc0MsR0FBR0gsaUNBQWlDLENBQUNFLGlCQUFpQixDQUFDLEVBQzdGRSxlQUFlLEdBQUdDLG1CQUFtQixDQUFDRixzQ0FBc0MsQ0FBQyxBQUFDLEVBQUMsR0FBRztJQUV4RixPQUFPQyxlQUFlLENBQUM7Q0FDeEI7QUFFTSxTQUFTUCxzQ0FBc0MsQ0FBQ1MsbUJBQW1CLEVBQUU7SUFDMUUsSUFBTUMsd0NBQXdDLEdBQUdQLGlDQUFpQyxDQUFDTSxtQkFBbUIsQ0FBQyxFQUNqR0UsZUFBZSxHQUFHSCxtQkFBbUIsQ0FBQ0Usd0NBQXdDLENBQUMsQUFBQyxFQUFDLEdBQUc7SUFFMUYsT0FBT0MsZUFBZSxDQUFDO0NBQ3hCO0FBRU0sU0FBU1YscUJBQXFCLENBQUNNLGVBQWUsRUFBRUssSUFBSSxFQUFFO0lBQzNELElBQUksS0FBSyxFQUFFO0lBQ1QsR0FBRztLQUNKLE1BQU0sSUFBSUwsZUFBZSxLQUFLTSxVQUFZLGFBQUEsRUFBRTtRQUMzQ04sZUFBZSxHQUFHSyxJQUFJLENBQUMsQ0FBRSxHQUFHO0tBQzdCLE1BQU07UUFDTEwsZUFBZSxHQUFHLEFBQUMsRUFBQSxDQUFxQkssTUFBSSxDQUF2QkwsZUFBZSxFQUFDLEdBQUMsQ0FBTyxDQUFBLE1BQUEsQ0FBTEssSUFBSSxDQUFFLENBQUM7S0FDaEQ7SUFFRCxPQUFPTCxlQUFlLENBQUM7Q0FDeEI7QUFFTSxTQUFTTCxxQkFBcUIsQ0FBQ1MsZUFBZSxFQUFFQyxJQUFJLEVBQUU7SUFDM0QsSUFBSSxLQUFLLEVBQUU7SUFDVCxHQUFHO0tBQ0osTUFBTSxJQUFJRCxlQUFlLEtBQUssSUFBSSxFQUFFO1FBQ25DQSxlQUFlLEdBQUcsSUFBSSxDQUFDO0tBQ3hCLE1BQU0sSUFBSUEsZUFBZSxLQUFLRSxVQUFZLGFBQUEsRUFBRTtRQUMzQ0YsZUFBZSxHQUFHQyxJQUFJLENBQUMsQ0FBRSxHQUFHO0tBQzdCLE1BQU07UUFDTEQsZUFBZSxHQUFHLEFBQUMsRUFBQSxDQUFxQkMsTUFBSSxDQUF2QkQsZUFBZSxFQUFDLEdBQUMsQ0FBTyxDQUFBLE1BQUEsQ0FBTEMsSUFBSSxDQUFFLENBQUM7S0FDaEQ7SUFFRCxPQUFPRCxlQUFlLENBQUM7Q0FDeEI7QUFFRCxTQUFTSCxtQkFBbUIsQ0FBQ0ksSUFBSSxFQUFFO0lBQ2pDLElBQU1FLElBQUksR0FBRyxBQUFDRixJQUFJLEtBQUssSUFBSSxHQUNYQSxJQUFJLEdBQ0ZDLFVBQVksYUFBQSxBQUFDO0lBRS9CLE9BQU9DLElBQUksQ0FBQztDQUNiIn0=