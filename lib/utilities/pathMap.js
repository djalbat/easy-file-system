"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    sourceEntryPathFromEntryItem: function() {
        return sourceEntryPathFromEntryItem;
    },
    targetEntryPathFromEntryItem: function() {
        return targetEntryPathFromEntryItem;
    },
    adjustSourceEntryPath: function() {
        return adjustSourceEntryPath;
    },
    adjustTargetEntryPath: function() {
        return adjustTargetEntryPath;
    }
});
var _necessary = require("necessary");
var _constants = require("../constants");
var concatenatePaths = _necessary.pathUtilities.concatenatePaths, pathWithoutBottommostNameFromPath = _necessary.pathUtilities.pathWithoutBottommostNameFromPath;
function sourceEntryPathFromEntryItem(entryItem) {
    var entryItemPath = entryItem.getPath(), entryItemPathWithoutBottommostName = pathWithoutBottommostNameFromPath(entryItemPath), sourceEntryPath = nonNullPathFromName(entryItemPathWithoutBottommostName); ///
    return sourceEntryPath;
}
function targetEntryPathFromEntryItem(entryItem) {
    var entryItemPath = entryItem.getPath(), entryItemPathWithoutBottommostName = pathWithoutBottommostNameFromPath(entryItemPath), targetEntryPath = nonNullPathFromName(entryItemPathWithoutBottommostName); ///
    return targetEntryPath;
}
function adjustSourceEntryPath(sourceEntryPath, name) {
    if (false) {
    ///
    } else if (sourceEntryPath === _constants.EMPTY_STRING) {
        sourceEntryPath = name; ///
    } else {
        sourceEntryPath = concatenatePaths(sourceEntryPath, name);
    }
    return sourceEntryPath;
}
function adjustTargetEntryPath(targetEntryPath, nameInputName) {
    if (false) {
    ///
    } else if (targetEntryPath === null) {
        targetEntryPath = null;
    } else if (targetEntryPath === _constants.EMPTY_STRING) {
        targetEntryPath = nameInputName; ///
    } else {
        targetEntryPath = concatenatePaths(targetEntryPath, nameInputName);
    }
    return targetEntryPath;
}
function nonNullPathFromName(name) {
    var path = name !== null ? name : _constants.EMPTY_STRING;
    return path;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvcGF0aE1hcC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgcGF0aFV0aWxpdGllcyB9IGZyb20gXCJuZWNlc3NhcnlcIjtcblxuaW1wb3J0IHsgRU1QVFlfU1RSSU5HIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xuXG5jb25zdCB7IGNvbmNhdGVuYXRlUGF0aHMsIHBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWVGcm9tUGF0aCB9ID0gcGF0aFV0aWxpdGllcztcblxuZXhwb3J0IGZ1bmN0aW9uIHNvdXJjZUVudHJ5UGF0aEZyb21FbnRyeUl0ZW0oZW50cnlJdGVtKSB7XG4gIGNvbnN0IGVudHJ5SXRlbVBhdGggPSBlbnRyeUl0ZW0uZ2V0UGF0aCgpLFxuICAgICAgICBlbnRyeUl0ZW1QYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lID0gcGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZUZyb21QYXRoKGVudHJ5SXRlbVBhdGgpLFxuICAgICAgICBzb3VyY2VFbnRyeVBhdGggPSBub25OdWxsUGF0aEZyb21OYW1lKGVudHJ5SXRlbVBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWUpOyAvLy9cblxuICByZXR1cm4gc291cmNlRW50cnlQYXRoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdGFyZ2V0RW50cnlQYXRoRnJvbUVudHJ5SXRlbShlbnRyeUl0ZW0pIHtcbiAgY29uc3QgZW50cnlJdGVtUGF0aCA9IGVudHJ5SXRlbS5nZXRQYXRoKCksXG4gICAgICAgIGVudHJ5SXRlbVBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWUgPSBwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lRnJvbVBhdGgoZW50cnlJdGVtUGF0aCksXG4gICAgICAgIHRhcmdldEVudHJ5UGF0aCA9IG5vbk51bGxQYXRoRnJvbU5hbWUoZW50cnlJdGVtUGF0aFdpdGhvdXRCb3R0b21tb3N0TmFtZSk7IC8vL1xuXG4gIHJldHVybiB0YXJnZXRFbnRyeVBhdGg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGp1c3RTb3VyY2VFbnRyeVBhdGgoc291cmNlRW50cnlQYXRoLCBuYW1lKSB7XG4gIGlmIChmYWxzZSkge1xuICAgIC8vL1xuICB9IGVsc2UgaWYgKHNvdXJjZUVudHJ5UGF0aCA9PT0gRU1QVFlfU1RSSU5HKSB7XG4gICAgc291cmNlRW50cnlQYXRoID0gbmFtZTsgIC8vL1xuICB9IGVsc2Uge1xuICAgIHNvdXJjZUVudHJ5UGF0aCA9IGNvbmNhdGVuYXRlUGF0aHMoc291cmNlRW50cnlQYXRoLCBuYW1lKTtcbiAgfVxuXG4gIHJldHVybiBzb3VyY2VFbnRyeVBhdGg7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGp1c3RUYXJnZXRFbnRyeVBhdGgodGFyZ2V0RW50cnlQYXRoLCBuYW1lSW5wdXROYW1lKSB7XG4gIGlmIChmYWxzZSkge1xuICAgIC8vL1xuICB9IGVsc2UgaWYgKHRhcmdldEVudHJ5UGF0aCA9PT0gbnVsbCkge1xuICAgIHRhcmdldEVudHJ5UGF0aCA9IG51bGw7XG4gIH0gZWxzZSBpZiAodGFyZ2V0RW50cnlQYXRoID09PSBFTVBUWV9TVFJJTkcpIHtcbiAgICB0YXJnZXRFbnRyeVBhdGggPSBuYW1lSW5wdXROYW1lOyAgLy8vXG4gIH0gZWxzZSB7XG4gICAgdGFyZ2V0RW50cnlQYXRoID0gY29uY2F0ZW5hdGVQYXRocyh0YXJnZXRFbnRyeVBhdGgsIG5hbWVJbnB1dE5hbWUpO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldEVudHJ5UGF0aDtcbn1cblxuZnVuY3Rpb24gbm9uTnVsbFBhdGhGcm9tTmFtZShuYW1lKSB7XG4gIGNvbnN0IHBhdGggPSAobmFtZSAhPT0gbnVsbCkgP1xuICAgICAgICAgICAgICAgICAgbmFtZSA6ICAvLy9cbiAgICAgICAgICAgICAgICAgICAgRU1QVFlfU1RSSU5HO1xuXG4gIHJldHVybiBwYXRoO1xufVxuIl0sIm5hbWVzIjpbInNvdXJjZUVudHJ5UGF0aEZyb21FbnRyeUl0ZW0iLCJ0YXJnZXRFbnRyeVBhdGhGcm9tRW50cnlJdGVtIiwiYWRqdXN0U291cmNlRW50cnlQYXRoIiwiYWRqdXN0VGFyZ2V0RW50cnlQYXRoIiwiY29uY2F0ZW5hdGVQYXRocyIsInBhdGhVdGlsaXRpZXMiLCJwYXRoV2l0aG91dEJvdHRvbW1vc3ROYW1lRnJvbVBhdGgiLCJlbnRyeUl0ZW0iLCJlbnRyeUl0ZW1QYXRoIiwiZ2V0UGF0aCIsImVudHJ5SXRlbVBhdGhXaXRob3V0Qm90dG9tbW9zdE5hbWUiLCJzb3VyY2VFbnRyeVBhdGgiLCJub25OdWxsUGF0aEZyb21OYW1lIiwidGFyZ2V0RW50cnlQYXRoIiwibmFtZSIsIkVNUFRZX1NUUklORyIsIm5hbWVJbnB1dE5hbWUiLCJwYXRoIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7SUFRZ0JBLDRCQUE0QjtlQUE1QkE7O0lBUUFDLDRCQUE0QjtlQUE1QkE7O0lBUUFDLHFCQUFxQjtlQUFyQkE7O0lBWUFDLHFCQUFxQjtlQUFyQkE7Ozt5QkFsQ2M7eUJBRUQ7QUFFN0IsSUFBUUMsbUJBQXdEQyx3QkFBYSxDQUFyRUQsa0JBQWtCRSxvQ0FBc0NELHdCQUFhLENBQW5EQztBQUVuQixTQUFTTiw2QkFBNkJPLFNBQVMsRUFBRTtJQUN0RCxJQUFNQyxnQkFBZ0JELFVBQVVFLE9BQU8sSUFDakNDLHFDQUFxQ0osa0NBQWtDRSxnQkFDdkVHLGtCQUFrQkMsb0JBQW9CRixxQ0FBcUMsR0FBRztJQUVwRixPQUFPQztBQUNUO0FBRU8sU0FBU1YsNkJBQTZCTSxTQUFTLEVBQUU7SUFDdEQsSUFBTUMsZ0JBQWdCRCxVQUFVRSxPQUFPLElBQ2pDQyxxQ0FBcUNKLGtDQUFrQ0UsZ0JBQ3ZFSyxrQkFBa0JELG9CQUFvQkYscUNBQXFDLEdBQUc7SUFFcEYsT0FBT0c7QUFDVDtBQUVPLFNBQVNYLHNCQUFzQlMsZUFBZSxFQUFFRyxJQUFJLEVBQUU7SUFDM0QsSUFBSSxLQUFLLEVBQUU7SUFDVCxHQUFHO0lBQ0wsT0FBTyxJQUFJSCxvQkFBb0JJLHVCQUFZLEVBQUU7UUFDM0NKLGtCQUFrQkcsTUFBTyxHQUFHO0lBQzlCLE9BQU87UUFDTEgsa0JBQWtCUCxpQkFBaUJPLGlCQUFpQkc7SUFDdEQsQ0FBQztJQUVELE9BQU9IO0FBQ1Q7QUFFTyxTQUFTUixzQkFBc0JVLGVBQWUsRUFBRUcsYUFBYSxFQUFFO0lBQ3BFLElBQUksS0FBSyxFQUFFO0lBQ1QsR0FBRztJQUNMLE9BQU8sSUFBSUgsb0JBQW9CLElBQUksRUFBRTtRQUNuQ0Esa0JBQWtCLElBQUk7SUFDeEIsT0FBTyxJQUFJQSxvQkFBb0JFLHVCQUFZLEVBQUU7UUFDM0NGLGtCQUFrQkcsZUFBZ0IsR0FBRztJQUN2QyxPQUFPO1FBQ0xILGtCQUFrQlQsaUJBQWlCUyxpQkFBaUJHO0lBQ3RELENBQUM7SUFFRCxPQUFPSDtBQUNUO0FBRUEsU0FBU0Qsb0JBQW9CRSxJQUFJLEVBQUU7SUFDakMsSUFBTUcsT0FBTyxBQUFDSCxTQUFTLElBQUksR0FDWEEsT0FDRUMsdUJBQVk7SUFFOUIsT0FBT0U7QUFDVCJ9